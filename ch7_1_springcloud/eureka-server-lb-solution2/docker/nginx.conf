worker_processes 1;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  keepalive_timeout 65;

  # load balancing
  upstream eureka-servers {
    # from docker to access host ip
    # https://www.thegeekdiary.com/how-to-add-new-host-entry-in-etc-hosts-when-a-docker-container-is-run/
    # 配合docker run的功能, 在运行时候将主机的IP添加到docker容器的/etc/hosts文件里面, 相当于做了个本地DNS.
    # 好处是这个方案将Docker和NGINX的耦合解耦了, 对NGINX的配置非侵入式
    server eureka-server-1:8761;
    server eureka-server-2:8762;
  }

  server {
    listen 8760;
    server_name eureka-server-load-balancer;
    location / {
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://eureka-servers; # reverse proxy
    }
  }
}
